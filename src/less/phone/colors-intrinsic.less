// Copyright (c) Microsoft Open Technologies, Inc.  All Rights Reserved. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.
.Colors(@theme) {

    // Panning indicator
    * {
        .mixin(dark) {
            -ms-scrollbar-shadow-color: rgb(0, 0, 0);
            -ms-scrollbar-face-color: rgb(255, 255, 255);
        }
        .mixin(light) {
            -ms-scrollbar-shadow-color: rgb(255, 255, 255);
            -ms-scrollbar-face-color: rgb(0, 0, 0);
        }
        .mixin(@theme);
    }

    // These classes reverse the colors on the subtree to which they are applied.
    // Ensure that the opposite color scheme always comes after the rule that is for the current color scheme.
    // This ensures that an author using <div class="win-ui-dark win-ui-light"> will always get the rule for the
    // inverted scheme to match last and win.
    .bodyTheme(dark) {
        color: @win_light_text_high;
        background-color: rgb(0, 0, 0);
    }
    .bodyTheme(light) {
        color: @win_dark_text_high;
        background-color: rgb(255, 255, 255);
    }

    .themeMixin(dark) {
        .win-ui-dark {
            .bodyTheme(dark);
        }
        .win-ui-light {
            .bodyTheme(light);
        }
    }
    .themeMixin(light) {
        .win-ui-light {
            .bodyTheme(light);
        }
        .win-ui-dark {
            .bodyTheme(dark);
        }
    }
    .themeMixin(@theme);

    //
    // Body
    //
    body {
        .bodyTheme(@theme);
    }

    //
    // Text selection
    //
    ::selection {
        background-color: Highlight;
        color: rgb(255, 255, 255);
    }

    //
    // Text input
    //
    input[type=text], input[type=password],
    input[type=email], input[type=number],
    input[type=tel], input[type=url],
    input[type=search], textarea, .win-textarea {
        .mixin(dark) {
            &:focus {
                border-color: Highlight;
                background-color: rgb(255, 255, 255);
            }

            &:disabled {
                background-color: transparent;
                border-color: rgba(255, 255, 255, 0.4);
                color: @win_light_text_low;
            }

            &:disabled:-ms-input-placeholder {
                color: @win_light_text_low;
            }
            &:disabled::-webkit-input-placeholder {
                color: @win_light_text_low;
            }
            &:disabled::-moz-input-placeholder {
                color: @win_light_text_low;
            }

            background-color: rgba(255, 255, 255, 0.8);
        }
        .mixin(light) {
            &:focus {
                background-color: rgb(255, 255, 255);
                border-color: Highlight;
                color: @win_dark_text_high;
            }

            &:disabled {
                background-color: transparent;
                border-color: rgba(0, 0, 0, 0.15);
                color: @win_dark_text_low;
            }

            &:disabled:-ms-input-placeholder {
                color: @win_dark_text_low;
            }
            &:disabled::-webkit-input-placeholder {
                color: @win_dark_text_low;
            }
            &:disabled::-moz-input-placeholder {
                color: @win_dark_text_low;
            }

            background-color: rgba(0, 0, 0, 0.2);
        }
        .mixin(@theme);

        &:disabled:-ms-input-placeholder {
            color: rgba(0, 0, 0, 0.25)
        }
        &:disabled::-webkit-input-placeholder {
            color: rgba(0, 0, 0, 0.25)
        }
        &:disabled::-moz-input-placeholder {
            color: rgba(0, 0, 0, 0.25)
        }

        border-color: transparent;
        color: @win_dark_text_high;
    }

    //
    // Radio and Checkbox
    //
    input::-ms-check {
        .mixin(dark) {
            border-color: rgb(255, 255, 255);
            color: rgb(255, 255, 255);
        }
        .mixin(light) {
            border-color: rgb(0, 0, 0);
            color: rgb(0, 0, 0);
        }
        .mixin(@theme);

        background-color: transparent;
    }

    input:disabled::-ms-check {
        .mixin(dark) {
            border-color: rgba(255, 255, 255, 0.4);
            color: rgba(255, 255, 255, 0.4);
        }
        .mixin(light) {
            border-color: rgba(0, 0, 0, 0.15);
            color: @win_dark_text_low;
        }
        .mixin(@theme);

        background-color: transparent;
    }

    input:enabled:hover:active::-ms-check {
        .mixin(dark) {
            background-color: Highlight;
        }
        .mixin(light) {
            background-color: Highlight;
            color: rgb(255, 255, 255);
        }
        .mixin(@theme);
    }

    //
    // Invalid input
    //
    input[type]:invalid {
        outline-color: rgb(255, 128, 51);
        outline-width: 2px;
    }

    //
    // Button
    //
    input[type=file] {
        .mixin(dark) {
            &::-ms-browse {
                color: @win_light_text_high;
                border-color: rgb(255, 255, 255);
                background-color: transparent;
            }

            &::-ms-value {
                background-color: transparent;
                border-color: rgba(255, 255, 255, 0.4);
                color: @win_light_text_low;
            }

            &::-ms-browse:hover:active {
                background-color: Highlight;
            }

            &:disabled::-ms-browse {
                border-color: rgba(255, 255, 255, 0.4);
                color: @win_light_text_low;
            }
        }
        .mixin(light) {
            &::-ms-browse {
                color: @win_dark_text_high;
                border-color: rgb(0, 0, 0);
                background-color: transparent;
            }

            &::-ms-value {
                background-color: transparent;
                border-color: rgba(0, 0, 0, 0.4);
                color: @win_dark_text_low;
            }

            &::-ms-browse:hover:active {
                background-color: Highlight;
            }

            &:disabled::-ms-browse {
                background-color: transparent;
                border-color: rgba(0, 0, 0, 0.15);
                color: @win_dark_text_low;
            }
        }
        .mixin(@theme);

        background-color: transparent;
        border-color: transparent;
        color: transparent;
    }

    button, input[type=button], input[type=reset],
    button[type=submit], input[type=submit] {
        .mixin(dark) {
            &:hover:active {
                background-color: Highlight;
            }

            &:disabled, &:disabled:hover:active {
                background-color: transparent;
                border-color: rgba(255, 255, 255, 0.4);
                color: @win_light_text_low;
            }

            color: @win_light_text_high;
            border-color: rgb(255, 255, 255);
        }
        .mixin(light) {
            &:hover:active {
                background-color: Highlight;
            }

            &:disabled, &:disabled:hover:active {
                background-color: transparent;
                border-color: rgba(0, 0, 0, 0.4);
                color: @win_dark_text_low;
            }

            color: @win_dark_text_high;
            border-color: rgb(0, 0, 0);
        }
        .mixin(@theme);

        background-color: transparent;
    }

    // Keyboard active has to be handled separately
    button:-ms-keyboard-active, button[type=submit]:-ms-keyboard-active,
    input[type=button]:-ms-keyboard-active, input[type=reset]:-ms-keyboard-active,
    input[type=submit]:-ms-keyboard-active {
        .mixin(dark) {
            background-color: rgb(255, 255, 255);
            color: rgb(0, 0, 0);
        }
        .mixin(light) {
            background-color: rgb(0, 0, 0);
            color: rgb(255, 255, 255);
        }
        .mixin(@theme);

        background-clip: border-box;
        border-color: transparent;
    }

    //
    // Dropdown
    //
    select {
        .mixin(dark) {
            &:disabled {
                background-color: transparent;
                border-color: rgba(255, 255, 255, 0.4);
                color: @win_light_text_low;

                option:checked {
                    background-color: rgba(255, 255, 255, 0.4);
                    color: rgba(0, 0, 0, 0.3);
                }
            }

            &::-ms-expand {
                background-color: transparent;
            }

            border-color: rgb(255, 255, 255);
            color: @win_light_text_high;
        }
        .mixin(light) {
            &:disabled {
                background-color: transparent;
                border-color: rgba(0, 0, 0, 0.15);
                color: @win_dark_text_low;

                option:checked {
                    background-color: rgba(0, 0, 0, 0.55);
                    color: rgba(0, 0, 0, 0.3);
                }
            }

            &::-ms-expand {
                background-color: transparent;
            }

            border-color: rgb(0, 0, 0);
            color: @win_dark_text_high;
        }
        .mixin(@theme);

        &:enabled:focus {
            background-color: rgb(255, 255, 255);
            border-color: Highlight;
            color: @win_dark_text_high;
        }

        background-color: transparent;
    }

    option {
        &:hover:active {
            background-color: rgb(255, 255, 255);
        }

        &:checked {
            color: Highlight;
            background-color: transparent;
        }

        &:checked:disabled {
            .mixin(dark) {
                background-color: rgba(255, 255, 255, 0.4);
            }
            .mixin(light) {
                background-color: rgba(0, 0, 0, 0.55);
            }
            .mixin(@theme);
            color: @win_dark_text_low;
        }
    }

    //
    // Progress
    //
    progress {
        .mixin(dark) {
            background-color: rgba(255, 255, 255, 0.1);
        }
        .mixin(light) {
            background-color: rgba(0, 0, 0, 0.095);
        }
        .mixin(@theme);

        &:indeterminate {
            background-color: transparent;
            color: Highlight;
        }

        &:-ms-fill {
            background-color: currentColor;
        }

        color: Highlight;
    }

    //
    // Slider
    //
    input[type=range] {
        .mixin(dark) {
            &::-ms-fill-upper {
                background-color: rgba(255, 255, 255, 0.16);
            }

            &::-ms-thumb {
                background-color: rgb(255, 255, 255);
            }

            &::-ms-ticks-before, &::-ms-ticks-after {
                color: rgba(255, 255, 255, 0.5);
            }

            &:disabled::-ms-fill-lower {
                background-color: rgba(255, 255, 255, 0.23);
            }

            &:disabled::-ms-fill-upper {
                background-color: rgba(255, 255, 255, 0.16);
            }

            &:disabled::-ms-thumb {
                background-color: rgb(126, 126, 126);
            }
        }
        .mixin(light) {
            &::-ms-fill-upper {
                background-color: rgba(0, 0, 0, 0.1);
            }

            &::-ms-thumb {
                background-color: rgb(0, 0, 0);
            }

            &::-ms-ticks-before, &::-ms-ticks-after {
                color: rgba(0, 0, 0, 0.5);
            }

            &:disabled::-ms-fill-lower {
                background-color: rgba(0, 0, 0, 0.2);
            }

            &:disabled::-ms-fill-upper {
                background-color: rgba(0, 0, 0, 0.1);
            }

            &:disabled::-ms-thumb {
                background-color: rgb(146, 146, 146);
            }
        }
        .mixin(@theme);

        &::-ms-fill-lower {
            background-color: Highlight;
        }

        &::-ms-track {
            background-color: transparent;
            color: transparent;
        }

        background-color: transparent;
    }

    //
    // Link
    //
    a {
        .mixin(dark) {
            /*
            :disabled pseudo-class doesn't apply to a,
            even though disabled attribute stops navigation
            */
            &[disabled], &[disabled]:active {
                color: rgba(255, 255, 255, 0.4);
            }
        }
        .mixin(light) {
            &[disabled], &[disabled]:active {
                color: rgba(0, 0, 0, 0.4);
            }
        }
        .mixin(@theme);

        color: Highlight;
    }

    // The "-ms-keyboard-active" pseudo is not always supported. When it is not supported
    // it will be treated as a CSS parse error and will throw out all rules in the current
    // CSS rule group. For this reason, never group it with other rules.
    .win-type-interactive {
        .mixin(dark) {
            &:-ms-keyboard-active {
                color: rgba(255, 255, 255, 0.4);
            }

            &:hover:active {
                color: rgba(255, 255, 255, 0.4);
            }
        }
        .mixin(light) {
            &:-ms-keyboard-active {
                color: rgba(0, 0, 0, 0.4);
            }

            &:hover:active {
                color: rgba(0, 0, 0, 0.4);
            }
        }
    }

    @media (-ms-high-contrast) {
        //
        // Text selection color
        //
        ::selection {
            .mixin(dark) {
                background-color: rgb(255, 255, 255);
                color: rgb(0, 0, 0);
            }
            .mixin(light) {
                background-color: rgb(0, 0, 0);
                color: rgb(255, 255, 255);
            }
            .mixin(@theme);
        }

        //
        // Radio and check button
        //
        input::-ms-check:hover:active, input::-ms-check:active {
            .mixin(dark) {
                background-color: rgb(255, 255, 255);
                color: rgb(0, 0, 0);
            }
            .mixin(light) {
                background-color: rgb(0, 0, 0);
                color: rgb(255, 255, 255);
            }
            .mixin(@theme);
        }

        //
        // Button
        //
        button:hover:active, input[type=button]:hover:active, input[type=submit]:hover:active {
            .mixin(dark) {
                background-color: rgb(255, 255, 255);
                color: rgb(0, 0, 0);
            }
            .mixin(light) {
                background-color: rgb(0, 0, 0);
                color: rgb(255, 255, 255);
            }
            .mixin(@theme);
        }

        //
        // Text input
        //
        input:not([type=button]):not([type=submit]), textarea, .win-textarea {
            .mixin(dark) {
                border-color: rgb(255, 255, 255);
                color: rgb(255, 255, 255);
            }
            .mixin(light) {
                border-color: rgb(0, 0, 0);
                color: rgb(0, 0, 0);
            }
            .mixin(@theme);
            background-color: transparent;
        }

        input:not([type=button]):not([type=submit]):focus, textarea:focus, .win-textarea:focus {
            .mixin(dark) {
                border-color: rgb(255, 255, 255);
                color: rgb(255, 255, 255);
            }
            .mixin(light) {
                border-color: rgb(0, 0, 0);
                color: rgb(0, 0, 0);
            }
            .mixin(@theme);
            background-color: transparent;
        }

        input:not([type=button]):not([type=submit]):disabled, textarea:disabled, .win-textarea:disabled {
            .mixin(dark) {
                border-color: @win_light_text_low;
                color: @win_light_text_low;
            }
            .mixin(light) {
                border-color: @win_dark_text_low;
                color: @win_dark_text_low;
            }
            .mixin(@theme);
        }

        //
        // Progress bar
        //
        progress {
            .mixin(dark) {
                color: rgb(255, 255, 255);
                border-color: rgb(255, 255, 255);
            }
            .mixin(light) {
                color: rgba(0, 0, 0, 0.87);
                border-color: rgb(0, 0, 0);
            }
            .mixin(@theme);
            border-width: 0px 1px 1px 1px;
            border-style: solid;
            background-color: transparent;
        }

        progress:indeterminate {
            .mixin(dark) {
                color: rgb(255, 255, 255);
            }
            .mixin(light) {
                color: rgba(0, 0, 0, 0.87);
            }
            .mixin(@theme);
            border-style: none;
        }

        //
        // Slider
        //
        input[type=range]::-ms-track, input[type=range]:active::-ms-track {
            .mixin(dark) {
                background-color: transparent;
                border-color: rgb(255, 255, 255);
                border-style: solid;
            }
            .mixin(light) {
                background-color: transparent;
                border-color: rgb(0, 0, 0);
                border-style: solid;
            }
            .mixin(@theme);
        }

        input[type=range]:disabled::-ms-track, input[type=range]:disabled::-ms-track {
            .mixin(dark) {
                border-color: rgba(255, 255, 255, 0.4);
            }
            .mixin(light) {
                border-color: rgba(0, 0, 0, 0.3);
            }
            .mixin(@theme);
        }

        input[type=range]::-ms-fill-lower, input[type=range]:active::-ms-fill-lower {
            .mixin(dark) {
                background-color: rgb(255, 255, 255);
            }
            .mixin(light) {
                background-color: rgb(0, 0, 0);
            }
            .mixin(@theme);
        }

        input[type=range]:disabled::-ms-fill-lower, input[type=range]:disabled::-ms-fill-lower {
            .mixin(dark) {
                background-color: rgba(255, 255, 255, 0.4);
            }
            .mixin(light) {
                background-color: rgba(0, 0, 0, 0.3);
            }
            .mixin(@theme);
        }

        input[type=range]::-ms-thumb {
            .mixin(dark) {
                background-color: rgb(0, 0, 0);
                border-width: 1px;
                border-color: rgb(255, 255, 255);
                border-style: solid;
            }
            .mixin(light) {
                background-color: rgb(255, 255, 255);
                border-width: 1px;
                border-color: rgb(0, 0, 0);
                border-style: solid;
            }
            .mixin(@theme);
        }

        input[type=range]:disabled::-ms-thumb {
            .mixin(dark) {
                background-color: rgb(0, 0, 0);
                border-color: rgba(255, 255, 255, 0.4);
            }
            .mixin(light) {
                background-color: rgb(255, 255, 255);
                border-color: rgba(0, 0, 0, 0.3);
            }
            .mixin(@theme);
        }

        input[type=range]::-ms-fill-upper, input[type=range]:active::-ms-fill-upper,
        input[type=range]:disabled::-ms-fill-upper {
            background-color: transparent;
        }

        input[type=range] {
            background-color: transparent;
        }

        //
        // Link
        //
        a, a:hover, a:hover:active, a:visited {
            .mixin(dark) {
                color: rgb(255, 255, 255);
                text-decoration: underline;
            }
            .mixin(light) {
                color: rgb(0, 0, 0);
                text-decoration: underline;
            }
            .mixin(@theme);
        }
    }
}
